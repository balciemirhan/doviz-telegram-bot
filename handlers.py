# handlers.py

from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

import constants as c
import keyboards
import data_fetcher


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/start komutu verildiÄŸinde kullanÄ±cÄ±yÄ± karÅŸÄ±lar."""
    user = update.effective_user
    await update.message.reply_markdown_v2(
        f"Merhaba {user.mention_markdown_v2()}\\! ğŸ‘‹\n\nGÃ¼ncel piyasa verileri iÃ§in aÅŸaÄŸÄ±daki menÃ¼yÃ¼ kullanabilirsiniz\\.",
        reply_markup=keyboards.create_persistent_keyboard(),
    )


async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """KalÄ±cÄ± klavyeden gelen metin mesajlarÄ±nÄ± iÅŸler."""
    text = update.message.text
    if text == c.BTN_DOVIZ:
        await update.message.reply_text(
            "LÃ¼tfen bir dÃ¶viz kuru seÃ§in:",
            reply_markup=keyboards.create_doviz_menu_keyboard(),
        )
    elif text == c.BTN_MADEN:
        await update.message.reply_text(
            "LÃ¼tfen bir maden tÃ¼rÃ¼ seÃ§in:",
            reply_markup=keyboards.create_metal_menu_keyboard(),
        )
    else:
        await update.message.reply_text(
            "LÃ¼tfen aÅŸaÄŸÄ±daki menÃ¼den bir iÅŸlem seÃ§in.",
            reply_markup=keyboards.create_persistent_keyboard(),
        )


async def callback_query_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Mesaj iÃ§i (inline) buton tÄ±klamalarÄ±nÄ± yÃ¶netir."""
    query = update.callback_query
    await query.answer()
    choice = query.data

    if choice == c.CB_MENU_DOVIZ:
        await query.edit_message_text(
            text="LÃ¼tfen bir dÃ¶viz kuru seÃ§in:",
            reply_markup=keyboards.create_doviz_menu_keyboard(),
        )
    elif choice == c.CB_MENU_METAL:
        await query.edit_message_text(
            text="LÃ¼tfen bir maden tÃ¼rÃ¼ seÃ§in:",
            reply_markup=keyboards.create_metal_menu_keyboard(),
        )
    elif choice == c.CB_MENU_ALTIN_CESITLERI:
        await query.edit_message_text(
            text="LÃ¼tfen bir altÄ±n tÃ¼rÃ¼ seÃ§in:",
            reply_markup=keyboards.create_altin_cesitleri_menu_keyboard(),
        )
    else:
        await query.edit_message_text(text="Veriler alÄ±nÄ±yor, lÃ¼tfen bekleyin...")
        price_data = data_fetcher.get_market_data(data_code=choice)

        back_menu = None
        if choice in [c.USD, c.EUR, c.GBP]:
            back_menu = c.CB_MENU_DOVIZ
        elif choice == c.GUMUS:
            back_menu = c.CB_MENU_METAL
        else:
            back_menu = c.CB_MENU_ALTIN_CESITLERI

        await query.edit_message_text(
            text=price_data,
            reply_markup=keyboards.create_back_menu_keyboard(back_menu),
            parse_mode=ParseMode.MARKDOWN_V2,
        )
